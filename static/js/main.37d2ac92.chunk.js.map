{"version":3,"sources":["components/WorldStats.js","components/Table.js","index.js"],"names":["WorldStats","props","mortality","totalStats","total_cases","total_deaths","parseFloat","replace","toPrecision","className","total_recovered","TableHeader","TableBody","countryData","sort","a","b","parseInt","cases","rows","map","row","index","key","country_name","deaths","serious_critical","Table","API_BASE","details","p1","fetch","p2","App","state","totalCases","newCases","totalDeaths","newDeaths","totalRecovered","countries","updateTime","Promise","all","then","responses","json","data","setState","catch","err","console","log","countries_stat","statistic_taken_at","this","Component","ReactDOM","render","document","getElementById"],"mappings":"wNAiCeA,EA/BI,SAACC,GAAW,IAEvBC,EADIC,EAAeF,EAAfE,WAOR,OALGA,EAAWC,aAAeD,EAAWE,eACpCH,GAAaI,WAAWH,EAAWE,aAAaE,QAAQ,KAAM,KAClDD,WAAWH,EAAWC,YAAYG,QAAQ,KAAM,KAChD,KAAKC,YAAY,GAAK,KAIlC,+BACI,+BACI,4BACI,2CACA,4CACA,+CACA,gDAGR,+BACI,4BACI,4BAAML,EAAWC,aACjB,wBAAIK,UAAU,UAAWN,EAAWE,cACpC,wBAAII,UAAU,aAAcN,EAAWO,iBACvC,wBAAID,UAAU,aAAcP,EAA5B,SCxBdS,EAAc,WAChB,OACE,+BACE,4BACE,oCACA,uCACA,qCACA,sCAEA,yCAGA,4DAMJC,EAAY,SAAAX,GACdA,EAAMY,YAAYC,MAAK,SAASC,EAAGC,GAC/B,OAAOC,SAASD,EAAEE,MAAMX,QAAQ,KAAM,KAC/BU,SAASF,EAAEG,MAAMX,QAAQ,KAAM,QAE1C,IAAMY,EAAOlB,EAAMY,YAAYO,KAAI,SAACC,EAAKC,GACrC,OACI,wBAAIC,IAAKD,GACL,wBAAIb,UAAU,QAAQa,EAAQ,GACP,WAArBD,EAAIG,aACA,wBAAIf,UAAU,UAAUY,EAAIG,cAC5B,4BAAKH,EAAIG,cAGf,4BAAKH,EAAIH,OACT,wBAAIT,UAAU,UAAUY,EAAII,QAE5B,wBAAIhB,UAAU,aAAaY,EAAIX,iBAG/B,wBAAID,UAAU,qBAAqBY,EAAIK,sBAInD,OAAO,+BAAQP,IAyBJQ,EAVD,SAAC1B,GAAU,IACbY,EAAgBZ,EAAhBY,YACR,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWA,YAAcA,MC3D/Be,G,MAAW,0DACXC,EAAU,CACR,QAAW,CACP,kBAAmB,qCACnB,iBAAkB,uDAGxBC,EAAKC,MAAM,GAAD,OAAIH,EAAJ,kBAA8BC,GACxCG,EAAKD,MAAM,GAAD,OAAIH,EAAJ,yBAAqCC,GAE/CI,E,2MACFC,MAAQ,CACJ/B,WAAY,GACZgC,WAAY,EACZC,SAAU,EACVC,YAAa,EACbC,UAAW,EACXC,eAAgB,EAChBC,UAAW,GACXC,WAAY,I,mFAGK,IAAD,OAChBC,QAAQC,IAAI,CACRb,EAAIE,IAEPY,MAAK,SAAAC,GACFA,EAAU,GAAGC,OAAOF,MAAK,SAAAG,GACrB,EAAKC,SAAS,CACV7C,WAAY4C,OAGnBE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEhBL,EAAU,GAAGC,OAAOF,MAAK,SAAAG,GACrB,EAAKC,SAAS,CACVR,UAAWO,EAAKM,eAChBZ,WAAYM,EAAKO,wBAGxBL,OAAM,SAAAC,GACHC,QAAQC,IAAIF,W,+BAKd,IAAD,EACyCK,KAAKrB,MAA3C/B,EADH,EACGA,WAAYqC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAG/B,OAFAU,QAAQC,IAAIjD,GAGR,yBAAKM,UAAU,OACf,4BAAQA,UAAU,cACd,sDAEJ,yBAAKA,UAAU,aACX,yCAAc,gCAASgC,EAAT,WACd,kBAAC,EAAD,CAAYtC,WAAeA,IAC3B,kBAAC,EAAD,CAAOU,YAAgB2B,U,GAjDrBgB,aAwDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.37d2ac92.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst WorldStats = (props) => {\r\n    const { totalStats } = props;\r\n    let mortality;\r\n    if(totalStats.total_cases && totalStats.total_deaths) {\r\n        mortality = (parseFloat(totalStats.total_deaths.replace(/,/g, '')) /\r\n                    parseFloat(totalStats.total_cases.replace(/,/g, '')) *\r\n                    100).toPrecision(3) + '%';\r\n    }\r\n    return (\r\n        // <h2> { totalStats.total_cases }</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Total Cases</th>\r\n                    <th>Total Deaths</th>\r\n                    <th>Total Recovered</th>\r\n                    <th>Mortality Rate</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th>{ totalStats.total_cases }</th>\r\n                    <th className=\"deaths\">{ totalStats.total_deaths }</th>\r\n                    <th className=\"recovered\">{ totalStats.total_recovered }</th>\r\n                    <th className=\"mortality\">{ mortality } </th>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default WorldStats","import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          <th>Rank</th>\r\n          <th>Country</th>\r\n          <th>Cases</th>\r\n          <th>Deaths</th>\r\n          {/* <th>Region</th> */}\r\n          <th>Recovered</th>\r\n          {/* <th>New Deaths</th> */}\r\n          {/* <th>New Cases</th> */}\r\n          <th>Serious Critial Condition</th>\r\n        </tr>\r\n      </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = props => {\r\n    props.countryData.sort(function(a, b){\r\n        return parseInt(b.cases.replace(/,/g, '')) - \r\n               parseInt(a.cases.replace(/,/g, '')); //API data is not sorted\r\n    });\r\n    const rows = props.countryData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td className=\"rank\">{index + 1}</td>\r\n                { row.country_name === \"Canada\" \r\n                    ? <td className=\"canada\">{row.country_name}</td>\r\n                    : <td>{row.country_name}</td>\r\n                }\r\n                {/* <td>{row.country_name}</td> */}\r\n                <td>{row.cases}</td>\r\n                <td className=\"deaths\">{row.deaths}</td>\r\n                {/* <td>{row.region}</td> */}\r\n                <td className=\"recovered\">{row.total_recovered}</td>\r\n                {/* <td classNaime=\"deaths\">{row.new_deaths}</td> */}\r\n                {/* <td>{row.new_cases}</td> */}\r\n                <td className=\"criticalCondition\">{row.serious_critical}</td>\r\n            </tr>\r\n        )\r\n            })\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\n// class Table extends Component { // class component version\r\n//     render() {\r\n//         const { countryData } = this.props;\r\n//         return (\r\n//             <table>\r\n//                 <TableHeader />\r\n//                 <TableBody countryData={ countryData }/>\r\n//             </table>\r\n//         )\r\n//     }\r\n// }\r\n\r\nconst Table = (props) => { // functional component version\r\n    const { countryData } = props;\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody countryData={ countryData }/>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport WorldStats from './components/WorldStats';\r\nimport Table from './components/Table';\r\nimport './index.css';\r\nconst API_BASE = \"https://coronavirus-monitor.p.rapidapi.com/coronavirus\";\r\nconst details = {\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"0897a6fcd9mshc9309b55be773acp196fd4jsnb89d70783070\"\r\n    }\r\n}\r\nconst p1 = fetch(`${API_BASE}/worldstat.php`, details);\r\nconst p2 = fetch(`${API_BASE}/cases_by_country.php`, details);\r\n\r\nclass App extends Component {\r\n    state = {\r\n        totalStats: [],\r\n        totalCases: 0,\r\n        newCases: 0,\r\n        totalDeaths: 0,\r\n        newDeaths: 0,\r\n        totalRecovered: 0,\r\n        countries: [],\r\n        updateTime: '',\r\n    }\r\n  \r\n    componentDidMount() {\r\n        Promise.all([\r\n            p1, p2\r\n        ])\r\n        .then(responses => {\r\n            responses[0].json().then(data => { //world stats\r\n                this.setState({\r\n                    totalStats: data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n            responses[1].json().then(data => { //cases by country\r\n                this.setState({\r\n                    countries: data.countries_stat,\r\n                    updateTime: data.statistic_taken_at,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        })\r\n    }\r\n  \r\n    render() {\r\n        const { totalStats, countries, updateTime } = this.state;\r\n        console.log(totalStats);\r\n        // console.log(countries);\r\n        return (\r\n            <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h2>Covid-19 Global Stats</h2>\r\n            </header>\r\n            <div className=\"container\">\r\n                <p>Updated on <strong>{updateTime} (UTC)</strong></p>\r\n                <WorldStats totalStats = { totalStats }/>\r\n                <Table countryData = { countries }/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}